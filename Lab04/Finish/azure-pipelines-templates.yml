# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  name: Default

parameters:
  - name: GlobalSettings
    default: GlobalVariables
    type: string

variables:
  - group: ${{ parameters.GlobalSettings }}
  - name: valueCounter
    value: $[counter(variables['build.reason'], 0)]

stages:
  - stage: FirstStage
    jobs:
      - template: jobs-tamplate.yml
        parameters:
          ManagedVariable: $(ManagedVariable)
          valueCounter: $(valueCounter)
     
  - stage: SecondStage
    dependsOn: FirstStage
    jobs:
    - job:
      variables: 
       varFromTask:  $[ stageDependencies.FirstStage.GetTheJobDone.outputs['setVar.varFromTask'] ]
      steps:
        - script: |
            echo Runnig second stage!
            echo $(varFromTask)
    - job: GetTheEnvironmentVariables
      displayName: A nicer job description for getting the environment variable
      condition: eq(stageDependencies.FirstStage.GetTheJobDone.result, 'Failed')
      steps:
      - task: CmdLine@2
        displayName: GetAllEnvVariables
        inputs:
          script: |
            set
    - deployment : 'Stage'
      displayName: 'Deployment'
      environment: Stage
      strategy:
        runOnce:
          deploy:            
            steps:
            - script: |
                echo deployment is done!
        
        

    