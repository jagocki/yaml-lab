trigger:
- master
- pr

pool: default

stages:
  - stage: 'BuildUnitTest'
    displayName: 'Build and unit test the web application'
    jobs: 
    - job: 'BuildJob'
      displayName: 'Build job'
      variables:
        wwwrootDir: 'Tailspin.SpaceGame.Web/wwwroot'
        dotnetSdkVersion: '3.1.300'
      steps:
      - task: UseDotNet@2
        displayName: 'Use .NET Core SDK $(dotnetSdkVersion)'
        inputs:
          version: '$(dotnetSdkVersion)'

      - task: Npm@1
        displayName: 'Run npm install'
        inputs:
          verbose: false

      - script: './node_modules/.bin/node-sass $(wwwrootDir) --output $(wwwrootDir)'
        displayName: 'Compile Sass assets'
      - task: gulp@0
        inputs:
          gulpFile: 'gulpfile.js'
          targets: 
          gulpjs: 'node_modules/gulp/bin/gulp.js'
          enableCodeCoverage: false
      - script: 'echo "$(Build.DefinitionName), $(Build.BuildId), $(Build.BuildNumber)" > buildinfo.txt'
        displayName: 'Write build info'
        workingDirectory: $(wwwrootDir)

      - task: DotNetCoreCLI@2
        displayName: 'Restore project dependencies'
        inputs:
          command: 'restore'
          projects: '**/*.csproj'

      - task: DotNetCoreCLI@2
        displayName: 'Build the project - $(buildConfiguration)'
        inputs:
          command: 'build'
          arguments: '--no-restore --configuration $(buildConfiguration)'
          projects: '**/*.csproj'
      - task: DotNetCoreCLI@2
        displayName: 'Run unit tests - $(buildConfiguration)'
        inputs:
          command: 'test'
          arguments: '--no-build --configuration $(buildConfiguration)'
          publishTestResults: true
          projects: '**/*Unit.Tests.csproj'
      - task: DotNetCoreCLI@2
        displayName: 'Publish the project zip - $(buildConfiguration)'
        inputs:
          command: 'publish'
          projects: '**/*.csproj'
          publishWebProjects: false
          arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/zip'
          zipAfterPublish: true
      - task: DotNetCoreCLI@2
        displayName: 'Publish the project bin - $(buildConfiguration)'
        inputs:
          command: 'publish'
          projects: '**/*.csproj'
          publishWebProjects: false
          arguments: '--no-build --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)/bin'
          zipAfterPublish: false
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/zip'
          ArtifactName: 'zip'
          publishLocation: 'Container'
      - task: PublishBuildArtifacts@1
        inputs:
          PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(buildConfiguration)/bin'
          ArtifactName: 'bin'
          publishLocation: 'Container'